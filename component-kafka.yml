application:
  configuration:
    input.instance-prefix: "kafka"
    input.recipe-url: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-kafka-cookbooks-stable-842c877.tar.gz"
    input.kafka-port: 9092
    input.manager-port: 9000
    input.manager-url: "http://qubell-starter-kit-artifacts.s3.amazonaws.com/deps/kafka/kafka-manager-1.2.3.zip"
  interfaces:
    input:
      instance-prefix: bind(kafka#input.instance-prefix)
      recipe-url: bind(kafka#input.recipe-url)
      kafka-port: bind(kafka#input.kafka-port)
      manager-port: bind(kafka#input.manager-port)
      manager-url: bind(kafka#input.manager-url)
    app-meta:
      application-pic: "bind(metadata#output.application-pic)"
    output:
      host: bind(kafka#result.host)
      port: bind(kafka#result.port)
      ui: bind(kafka#result.ui)
  bindings:
    - [kafka, zookeeper]
  components:
    metadata:
      type: cobalt.common.Constants
      interfaces:
        output:
          application-pic:
            type: publish-signal(map<string, object>)
            name: ""
      configuration:
        configuration.values:
          output.application-pic:
            large: "https://s3.amazonaws.com/qubell-images/kafka.jpg"
            small: "https://s3.amazonaws.com/qubell-images/kafka-31%D1%8548.jpg"
            small-height: 48
    kafka:
      type: workflow.Instance
      interfaces:
        input:
          instance-prefix:
            type: configuration(string)
            name: Instance prefix
          recipe-url:
            type: configuration(string)
            name: Chef recipie URL
          kafka-port:
            type: configuration(int)
            name: Kafka service listening port
          manager-port:
            type: configuration(int)
            name: Kafka web-manager port
          manager-url:
            type: configuration(string)
            name: Kafka manager source URL
        zoo:
          zoo-hosts:
             type: consume-signal(list<string>)
             name: Zoo hosts Public IPs
          zoo-ui:
             type: consume-signal(list<string>)
             name: Exhibitiors UI Urls
          zoo-nodes:
             type: consume-signal(list<string>)
             name: Zoo hosts Private IPs
          zoo-urls:
             type: consume-signal(list<string>)
             name: Zookeper urls (private)
        result:
          host:
            type: publish-signal(list<string>)
            name: Kafka IP
          port:
            type: publish-signal(int)
            name: Kafka port
          ui:
            type: publish-signal(string)
            name: Kafka Manager web UI
      required: [zoo]
      configuration:
        configuration.workflows:
          launch:
            steps:
              - get-env-props:
                  action: getEnvironmentProperties
                  phase: get-env-props
                  output:
                    props: result
              - provision:
                  action: provisionVms
                  precedingPhases: [get-env-props]
                  parameters:
                    hardwareId: ""
                    vmIdentity: "ec2-user"
                    roleName: default
                    staticIps: "{$.props.zoo.zoo-hosts}"
                  output:
                    ips: ips
              - deploy-kafka:
                  action: chefsolo
                  precedingPhases: [ provision ]
                  parameters:
                    version: "11.16.2"
                    roles: [ default ]
                    recipeUrl: "{$.recipe-url}"
                    runList: [ "recipe[apache_kafka]" ]
                    jattrs:
                      java:
                        jdk_version: "7"
                      apache_kafka:
                        port: "{$.kafka-port}"
                        service_style: "init"
                        "zookeeper.connect": "{$.props.zoo.zoo-urls}"
                        "broker.id": "{$.props.zoo.zoo-nodes}"
              - provision-kafka-manager:
                  action: provisionVms
                  precedingPhases: [deploy-kafka]
                  parameters:
                    hardwareId: ""
                    vmIdentity: "ec2-user"
                    roleName: manager
                    staticIps: ["{$.props.zoo.zoo-hosts[0]}"]
              - deploy-kafka-manager:
                  action: chefsolo
                  precedingPhases: [ provision-kafka-manager ]
                  parameters:
                    version: "11.16.2"
                    roles: [ default ]
                    recipeUrl: "{$.recipe-url}"
                    runList: [ "recipe[apache_kafka::manager]" ]
                    jattrs:
                      apache_kafka:
                        "zookeeper.connect": "{$.props.zoo.zoo-urls}"
                        manager_url: "{$.manager-url}"
                        manager_port: "{$.manager-port}"

            return:
              host:
                value: "{$.ips}"
              port:
                value: "{$.kafka-port}"
              ui:
                value: "http://{$.ips[0]}:{$.manager-port}"
    zookeeper:
      type: reference.Submodule
      configuration:
        __locator.application-id: "Zookeeper"
      interfaces:
        zoo:
          zoo-hosts:
             type: publish-signal(list<string>)
             name: Zoo hosts Public IPs
          zoo-ui:
             type: publish-signal(list<string>)
             name: Exhibitiors UI Urls
          zoo-nodes:
             type: publish-signal(list<string>)
             name: Zoo hosts Private IPs
          zoo-urls:
             type: publish-signal(list<string>)
             name: Zookeper urls (private)