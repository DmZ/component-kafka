application:
  configuration:
    input.image: { ami: "us-east-1/ami-bc8131d4", user: "root"}
    input.image-hardware: m1.small
    input.instance-prefix: "kafka"
    input.recipe-url: "https://dl.dropboxusercontent.com/u/250836/kafka.tar.gz"
    input.quantity: 3
  interfaces:
    input:
      image: bind(kafka#input.image)
      image-hardware: bind(kafka#input.image-hardware)
      instance-prefix: bind(kafka#input.instance-prefix)
      recipe-url: bind(kafka#input.recipe-url)
      quantity: bind(kafka#input.quantity)
    output:
      host: bind(kafka#result.host)
      port: bind(kafka#result.port)
  bindings: 
    - [kafka, zookeeper]
  components:
    kafka:
      type: workflow.Instance
      interfaces:
        input:
          image:
            type: configuration(map<string, string>)
            name: Compatible AMI
            suggestions:
              "CentOS 6.4 (us-east)": { ami: "us-east-1/ami-bc8131d4", user: "ec2-user"}
          image-hardware:
            type: configuration(string)
            name: Compatible hardware
            suggestions:
              "2 CPU, 7.5 Gb": m3.large
          instance-prefix:
            type: configuration(string)
            name: Instance prefix
          recipe-url:
            type: configuration(string)
            name: Chef recipie URL
          quantity:
            type: configuration(int)
            name: Kafka nodes quantity
        zoo:
          zoo-hosts:
             type: consume-signal(list<string>)
             name: Zoo hosts Public IPs
          zoo-ui:
             type: consume-signal(list<string>)
             name: Exhibitiors UI Urls
          zoo-nodes:
             type: consume-signal(list<string>)
             name: Zoo hosts Private IPs
          zoo-urls:
             type: consume-signal(list<string>)
             name: Zookeper urls (private)
        result:
          host:
            type: publish-signal(list<string>)
            name: Kafka IP
          port:
            type: publish-signal(int)
            name: Kafka port
      required: [zoo]
      configuration:
        configuration.workflows:
          launch:
            steps:
              - provision:
                  action: provisionVms
                  parameters:
                    hardwareId: "{$.image-hardware}"
                    imageId: "{$.image.ami}"
                    vmIdentity: "{$.image.user}"
                    roleName: default
                    targetQuantity: "{$.quantity}"
                  output:
                    ips: ips
                    priv-ips: privateips
              - get-env-props:
                  action: getEnvironmentProperties
                  phase: get-env-props
                  output:
                    props: result 
              - deploy-kafka:
                  action: chefsolo
                  precedingPhases: [ provision ]
                  parameters:
                    version: "11.16.2"
                    roles: [ default ]
                    recipeUrl: "{$.recipe-url}"
                    runList: [ "recipe[apache_kafka]" ]
                    jattrs:
                      apache_kafka:
                        service_style: "init"
                        "zookeeper.connect": "{$.props.zoo.zoo-urls}"
                        "broker.id": "{$.priv-ips}"
            return:
              host:
                value: "{$.ips}"
              port:
                value: 9092
    zookeeper:
      type: reference.Submodule
      configuration:
        __locator.application-id: Zookeeper
      interfaces:
        zoo: ### combined interface for actions/output pins
          zoo-hosts:
             type: publish-signal(list<string>)
             name: Zoo hosts Public IPs
          zoo-ui:
             type: publish-signal(list<string>)
             name: Exhibitiors UI Urls
          zoo-nodes:
             type: publish-signal(list<string>)
             name: Zoo hosts Private IPs
          zoo-urls:
             type: publish-signal(list<string>)
             name: Zookeper urls (private)
          